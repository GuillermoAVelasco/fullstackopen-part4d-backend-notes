{"version":3,"sources":["components/Note.js","services/notes.js","components/Notification.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","baseUrl","request","axios","get","nonExisting","id","date","then","response","data","concat","newObject","post","put","Notification","message","Footer","style","color","fontStyle","fontSize","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","notesToShow","filter","map","i","find","n","changedNote","console","log","returnedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","Date","Math","random","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ac82451a.chunk.js","sourcesContent":["import React from 'react'\n\nconst Note = ({ note,toggleImportance  }) => {\n  const label = note.important\n    ? 'make not important' : 'make important'\n  return (\n    <li className='note'>\n      {note.content} \n      <button onClick={toggleImportance}>{label}</button>\n    </li>\n  )\n}\n\nexport default Note","import axios from 'axios'\nconst baseUrl = 'http://localhost:3001/api/notes' //http://localhost:3001 por agregar el build en backend los 2 estan en el mismo server\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    const nonExisting = {\n        id: 10000,\n        content: 'This note is not saved to server',\n        date: '2019-05-30T17:30:31.098Z',\n        important: true,\n    }\n    return request.then(response => response.data.concat(nonExisting))\n}\n  \nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n  \nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n}\n\nexport default { \n  getAll, \n  create, \n  update \n}","const Notification = ({ message }) => {\n    if (message === null) {\n      return null\n    }\n  \n    return (\n      <div className=\"error\">\n        {message}\n      </div>\n    )\n}\n\nexport default Notification","import React,{useState, useEffect} from 'react'\nimport Note from './components/Note'\nimport noteService from './services/notes'\nimport Notification from './components/Notification'\n\n\nconst Footer = () => {\n  const footerStyle = {\n    color: 'green',\n    fontStyle: 'italic',\n    fontSize: 16\n  }\n  return (\n    <div style={footerStyle}>\n      <br />\n      <em>Note app, Department of Computer Science, University of Helsinki 2020</em>\n    </div>\n  )\n}\n\nconst App = () => { //props\n  const [notes,setNotes]=useState([]) //props.notes\n  const [newNote, setNewNote] = useState('')\n  const [showAll, setShowAll] = useState(true)\n  const [errorMessage, setErrorMessage] = useState('some error happened...')\n\n  const handleNoteChange = (event) => {\n    console.log(event.target.value)\n    setNewNote(event.target.value)\n  }\n\n  useEffect(() => {\n    noteService\n      .getAll()\n      .then(initialNotes  => {\n        setNotes(initialNotes )\n      })\n  }, [])\n\n  const toggleImportanceOf = id => {\n    const note = notes.find(n => n.id === id)\n    const changedNote = { ...note, important: !note.important }\n    console.log(' mandado',changedNote)\n    noteService\n      .update(id, changedNote)\n      .then(returnedNote  => {\n        console.log('retornado',returnedNote)\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n      })\n      .catch(error => {\n        setErrorMessage(\n          `Note '${note.content}' was already removed from server`\n        )\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n        setNotes(notes.filter(n => n.id !== id))\n      })\n  }\n\n  const addNote = (event) => {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote,\n      date: new Date(),\n      important: Math.random() < 0.5\n    }\n    \n    noteService\n    .create(noteObject)\n    .then(returnedNote   => {\n      setNotes(notes.concat(returnedNote  ))\n      setNewNote('')\n    })\n  }\n\n  const notesToShow = showAll\n    ? notes\n    : notes.filter(note => note.important)  //=== true\n\n    return (\n      <div>\n        <h1>Notes</h1>\n        <Notification message={errorMessage} />\n        <div>\n          <button onClick={() => setShowAll(!showAll)}>\n            show {showAll ? 'important' : 'all' }\n          </button>\n        </div>\n        <ul>\n          {notesToShow.map((note,i) => \n            <Note\n            key={i}\n            note={note} \n            toggleImportance={() => toggleImportanceOf(note.id)}\n            />\n          )}\n        </ul>\n        <form onSubmit={addNote}>\n          <input value={newNote} onChange={handleNoteChange}/>\n          <button type=\"submit\">save</button>\n        </form> \n        <Footer />\n      </div>\n    )\n  }\n\n  export default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nconst notes = [\n  {\n    id: 1,\n    content: 'HTML is easy',\n    date: '2019-05-30T17:30:31.098Z',\n    important: true\n  },\n  {\n    id: 2,\n    content: 'Browser can execute only JavaScript',\n    date: '2019-05-30T18:39:34.091Z',\n    important: false\n  },\n  {\n    id: 3,\n    content: 'GET and POST are the most important methods of HTTP protocol',\n    date: '2019-05-30T19:20:14.298Z',\n    important: true\n  }\n]\n\nReactDOM.render(\n     <App notes={notes} />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}